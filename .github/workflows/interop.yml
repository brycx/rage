name: Interoperability tests

on: push

jobs:
  build-rage:
    name: Build rage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.37.0
          override: true
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features unstable
      - uses: actions/upload-artifact@v1
        with:
          name: rage
          path: target/debug/rage

  build-age:
    name: Build age
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Check out FiloSottile/age
        uses: actions/checkout@v1
        with:
          repository: FiloSottile/age
          ref: refs/heads/master
      - name: go build
        run: |
          cd $GITHUB_WORKSPACE/../age
          go build filippo.io/age/cmd/age
      - uses: actions/upload-artifact@v1
        with:
          name: age
          path: ../age/age

  test:
    name: ${{ matrix.alice }} -> ${{ matrix.bob }} [${{ matrix.recipient }}]
    runs-on: ubuntu-latest
    needs: [build-rage, build-age]
    strategy:
      matrix:
        alice: [rage, age]
        bob: [rage, age]
        recipient: [x25519, ssh-rsa, ssh-ed25519]
      fail-fast: false

    steps:
      # Download the binaries to test
      - uses: actions/download-artifact@v1
        with:
          name: rage
      - uses: actions/download-artifact@v1
        with:
          name: age
      - run: chmod +x rage/rage
      - run: chmod +x age/age

      # Prepare the test environment
      - name: Install dos2unix for simulating Windows files
        run: sudo apt install dos2unix
      - name: Write (very not private) age X25519 key
        if: matrix.recipient == 'x25519'
        run: echo "AGE-SECRET-KEY-1TRYTV7PQS5XPUYSTAQZCD7DQCWC7Q77YJD7UVFJRMW4J82Q6930QS70MRX" >key.txt
      - name: Set the corresponding age x25519 recipient
        if: matrix.recipient == 'x25519'
        run: echo "::set-env name=AGE_PUBKEY::age1y8m84r6pwd4da5d45zzk03rlgv2xr7fn9px80suw3psrahul44ashl0usm"
      - name: Generate an ssh-rsa key
        if: matrix.recipient == 'ssh-rsa'
        run: ssh-keygen -t rsa -N "" -f key.txt
      - name: Generate an ssh-ed25519 key
        if: matrix.recipient == 'ssh-ed25519'
        run: ssh-keygen -t ed25519 -N "" -f key.txt
      - name: Set the corresponding SSH recipient
        if: matrix.recipient == 'ssh-rsa' || matrix.recipient == 'ssh-ed25519'
        # age doesn't currently support files containing lists of recipients
        run: echo "::set-env name=AGE_PUBKEY::$(cat key.txt.pub)"

      # Tests!
      - name: Encrypt to file
        run: echo "Test string" | ${{ matrix.alice }}/${{ matrix.alice }} -o test.age -r "$AGE_PUBKEY"
      - name: Decrypt from file
        run: ${{ matrix.bob }}/${{ matrix.bob }} -d -i key.txt test.age | grep -q "^Test string$"
      - name: Generate a file to encrypt
        run: echo "2 test 2 string" > test2.txt
      - name: Encrypt to ASCII-armored file
        run: ${{ matrix.alice }}/${{ matrix.alice }} -a -o test2.age -r "$AGE_PUBKEY" test2.txt
      - name: Decrypt from ASCII-armored file
        run: ${{ matrix.bob }}/${{ matrix.bob }} -d -i key.txt test2.age | grep -q "^2 test 2 string$"
      - name: Convert file to CRLF
        run: unix2dos test2.age
      - name: Decrypt from ASCII-armored CRLF file
        run: ${{ matrix.bob }}/${{ matrix.bob }} -d -i key.txt test2.age | grep -q "^2 test 2 string$"
      - name: Pipes!
        run: echo "Test string 3 - ASCII Drift" | ${{ matrix.alice }}/${{ matrix.alice }} -r "$AGE_PUBKEY" | ${{ matrix.bob }}/${{ matrix.bob }} -d -i key.txt | grep -q "^Test string 3 - ASCII Drift$"
      - name: Explicit stdout during encryption
        run: ${{ matrix.alice }}/${{ matrix.alice }} -a -o - -r "$AGE_PUBKEY" test2.txt >test4.age
      - name: Explicit stdin during decryption
        run: cat test4.age | ${{ matrix.bob }}/${{ matrix.bob }} -d -i key.txt - | grep -q "^2 test 2 string$"
